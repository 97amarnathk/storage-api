name: Docs

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  test:
    name: Test / OS ${{ matrix.platform }} / Node ${{ matrix.node }}
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-18.04]
        node: ['14']

    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Set up Node
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - name: Set up .env file
        run: |
          touch .env
          echo ANON_KEY=${{ secrets.ANON_KEY }} >> .env
          echo SERVICE_KEY=${{ secrets.SERVICE_KEY }} >> .env
          echo TENANT_ID=${{ secrets.TENANT_ID }} >> .env
          echo REGION=${{ secrets.REGION }} >> .env
          echo POSTGREST_URL=${{ secrets.POSTGREST_URL }} >> .env
          echo GLOBAL_S3_BUCKET=${{ secrets.GLOBAL_S3_BUCKET }} >> .env
          echo PGRST_JWT_SECRET=${{ secrets.PGRST_JWT_SECRET }} >> .env
          echo AUTHENTICATED_KEY=${{ secrets.AUTHENTICATED_KEY }} >> .env
          echo DATABASE_URL=postgresql://postgres:postgres@127.0.0.1/postgres >> .env
          echo PGOPTIONS='-c search_path=storage' >> .env
          echo FILE_SIZE_LIMIT=52428800 >> .env
          echo STORAGE_BACKEND=s3 >> .env
      - name: export docs
        run: |
          npm ci
          npm run docs:export

      - name: Generate Swagger UI
        uses: Legion2/swagger-ui-action@v1
        with:
          output: swagger-ui
          spec-file: static/api.json

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: swagger-ui
